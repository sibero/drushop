<?php

/**
 * Реализация hook_comment()
 */
function spamers_must_die_comment(&$a1, $op)
{
    global $user;
	
	if ($op == 'validate' && $user->uid !=1 && !$a1['rwerwer123123'])
    {
        // выводим сообщение боту
        form_set_error('rwerwer123123', t('Вы не поставили галочку на пункте "я не спамер", ваше сообщение не будет добавлено'));
    }
	
	if ($op == 'validate' && $user->uid !=1 && $a1['imnotbot_hide'])
    {
        // выводим сообщение боту
        form_set_error('rwerwer123123', t('Вы поставили галочку на пункте "я спамер", ваше сообщение не будет добавлено'));
    }
	
}

/**
 * Реализация hook_form_alter()
 * Добавляем поле "Я не спамер" в форму отправки комментариев.
 */
function spamers_must_die_form_alter(&$form, &$form_state, $form_id)
{
    global $user;
 
    // форма будет показываться только анонимным пользователям
    if ($form_id == 'comment_form' && $user->uid != 1)
    {
        $form['rwerwer123123'] = array(
            '#type' => 'checkbox',
            '#title' => 'Я не спамер',
            '#weight' => 0.01, // поле будет выводится перед кнопками Сохранить / Предпросмотр. Возможно вам придётся поэкспериментировать со значением
        );
		$form['imnotbot_hide'] = array(
            '#type' => 'checkbox',
            '#title' => 'Я спамер',
            '#weight' => 0.02, // поле будет выводится перед кнопками Сохранить / Предпросмотр. Возможно вам придётся поэкспериментировать со значением
			);
    }
}

function spamers_must_die_user($op, &$edit, &$user, $category = NULL) {
  switch($op) {
    // http://www.drupal.ru/node/60401
    case 'register':
	if(arg(0) != 'admin') {
    
      // Add a fieldset containing radio buttons to the
      // user registration form.
     
     
     // Чекбокс
      $fields['iam_human_checkbox'] = array(
        '#type' => 'checkbox',
        '#title' => 'я не спамер',
       '#weight' => 0.01, // двигаем вниз
      );
     
     // Чекбокс (антиспам 1)
      $fields['iam_human_checkbox1'] = array(
        '#type' => 'checkbox',
        '#title' => 'чекбокс 1',
       '#weight' => 10, // группируем два чекбокса
      );
     
     // Чекбокс (антиспам 2)
      $fields['iam_human_checkbox2'] = array(
        '#type' => 'checkbox',
        '#title' => 'чекбокс 2',
       '#weight' => 11, // группируем два чекбокса
      );
     
     // Text (username)
      $fields['username'] = array(
        '#type' => 'textfield',
        '#title' => 'Login'
      );
     
     // Text (familyname)
      $fields['familyname'] = array(
        '#type' => 'textfield',
        '#title' => 'Name'
      );
     
      return $fields; 
}
    // Field values for registration are being checked.
    // (also called when user edits his/her 'my account' page, but
    // $edit['decision'] is not set in that case).
    case 'validate':
    if(arg(0) != 'admin') {
      // Make sure the user selected radio button 1 ('I agree').
      // the validate op is reused when a user updates information on
      // the 'my account' page, so we use isset to test whether we are
     // on the registration page where the decision field is present.
    
    
    

     // Чекбокс (видим для людей)   
      if (isset($edit['iam_human_checkbox']) && $edit['iam_human_checkbox'] != '1') {
        form_set_error('iam_human_checkbox', 'Вы не поставили галочку на пункте "я не спамер", ваша регистрация не одобрена');
      }
     
     // Чекбокс 1    
      if (isset($edit['iam_human_checkbox1']) && $edit['iam_human_checkbox1'] != '1') {
        form_set_error('iam_human_checkbox1', 'Чекбокс 1');
      }
     
     // логин (должен быть пустой)
      //if (isset($edit['iam_human_text']) && $edit['iam_human_text'] != '1') {
      if (isset($edit['username']) && $edit['username'] != '') {
        form_set_error('iam_human_text', 'Ошибка № 2 - Данное поле нельзя заполнять');
      }
     
     // Фамилия (заполняется jquery)
      //if (isset($edit['iam_human_text']) && $edit['iam_human_text'] != '1') {
      if (isset($edit['familyname']) && $edit['familyname'] != 'neo') {
        form_set_error('iam_human_text', 'Ошибка № 3 - здесь должен быть другой текст');
      }
     
     
      break;
}
    // New user has just been inserted into the database.
    case 'insert':
	if(arg(0) != 'admin') {
      // Record information for future lawsuit.
      //watchdog('user', t('User %user agreed to legal terms',
        //array('%user' => $user->name)));
      break;
	  }
  }
}

function spamers_must_die_init() {
$path = drupal_get_path('module', 'spamers_must_die');
drupal_add_css($path .'/spamers_must_die.css');
if (arg(1) == "register"){
	drupal_add_js($path .'/spamers_must_die.js');
	}
}
